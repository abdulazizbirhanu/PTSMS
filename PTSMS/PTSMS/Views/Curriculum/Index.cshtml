@using PTSMSDAL.Models.Curriculum.View;


@{
    ViewBag.Title = "Index";
    ViewBag.Name = "Program Details.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<meta charset='utf-8' />

<style type="text/css">
     .skin-blue-light .sidebar-menu > li {
         -webkit-transition: border-left-color 0.3s ease;
         -o-transition: border-left-color 0.3s ease;
         transition: border-left-color 0.3s ease;
     }

     .sidebar-menu > li.header {
         color: #848484;
         background: #66CCFF;
     }

     .sidebar-menu > li > a {
         border-left: 3px solid transparent;
         font-weight: 900 !important;
     }

     /*.CurriculemTreeViewController .sidebar-menu > li:hover > a,*/
     .CurriculemTreeViewController .sidebar-menu > li.active > a {
         color: #000000 !important;
         background: #f4f4f5 !important;
     }

     .skin-blue-light .sidebar-menu > li.active {
         border-left-color: #3c8dbc;
     }

     /*.CurriculemTreeViewController .tree-view-row-style > li:hover .tree-view-row-style > li:focus {
         background-color: #66CCFF !important;
     }*/

    .CurriculemTreeViewController .text-color {
         color: #fff;
     }

    .skin-blue .CurriculemTreeViewController .treeview-menu > li > a {
         color: #000;
     }

         .skin-blue .treeview-menu > li > a:hover {
             color: #67975b;
             /*font-weight:bold;*/
         }

     .skin-blue .CurriculemTreeViewController .sidebar-menu > li > .treeview-menu {
         margin: 0 1px;
         background: #f4f4f5;
     }

     .CurriculemTreeViewController .sidebar-menu .treeview-menu > li > a {
         padding: 0px 1px 1px 1px;
     }

     .btn-info {
         background-color: #67975b;
         border-color: #67975b;
         padding: 0px 6px 0px 6px;
     }

     .btn-warning {
         border-color: #67975b;
         padding: 0px 7px 0px 3px;
     }

     /*.btn {
         padding: 0px 3px 0px 3px;
     }*/

     ul ul, ol ul {
         list-style-type: none;
     }

     .skin-blue .treeview-menu > li.active > a, .skin-blue .CurriculemTreeViewController  .treeview-menu > li > a:hover {
         color: #67975b;
     }
      #CurriculumDetailPopupModel .modal-dialog {
        width: 60%;
    }
</style>

<link href="~/Content/AdminLTE/plugins/select2/select2.css" rel="stylesheet" />

@section scripts
    {
    @*<script src="~/Scripts/jquery-1.10.2.js"></script>*@
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
    <script src="~/Scripts/bootbox.min.js"></script>
    <script src="~/Scripts/jquery.cookie.js"></script>
    <script src="~/Content/AdminLTE/plugins/select2/select2.full.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            @{
                if(ViewBag.Message!=null)
                {
                    <text>
            bootbox.alert('@ViewBag.Message');
            </text>
                    ViewBag.Message = null;
                }

                if(ViewBag.ProgramId != null)
                {
                    <text>
            $('#txtProgramId').val('@ViewBag.ProgramId');
            </text>
                    ViewBag.ProgramId = null;
                }
            }


            //Set the State of the tree
            debugger;
            var actionType = '';
            SetTreeState();
            ////
            var currentElementId = "";
            var box = null;

            $('body').on('change', "#dpdCourseModuleTyee", function () {

                var getListUrl = "";
                var courseModuleTyee = $('#dpdCourseModuleTyee').val();
                if (courseModuleTyee == 'Exam')
                    getListUrl = "/Exams/ListExam";
                if (courseModuleTyee == 'GroundLesson')
                    getListUrl = "/GroundLessons/ListGroundLessons";

                //

                $.ajax({
                    url: getListUrl,
                    type: 'GET',
                    success: function (result) {
                        if (result.hasList) {

                            var selectOption = "";
                            var option = '<option value="">--Please Select--</option>';;
                            jQuery.each(result.resultData, function (index, item) {
                                option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                            });
                            selectOption = '<div class="form-group div2">' + '<label class="col-md-4 control-label" for="name">' + courseModuleTyee + '</label> '
                            + '<div class="col-md-6">' +
                                '<select id="dpdCourseModuleAssociate" name="dpdCourseModuleAssociate" multiple="multiple"  class="form-control select2" data-val="true" data-val-required="' + courseModuleTyee + ' is required." data-placeholder="Select" style="width: 100%;">'
                            + option + '</select>'
                            + '</div> ' + '</div> ';
                            $('#CourseModuleForm > .div2:last').remove();
                            var newFormElement = $("#CourseModuleForm");
                            newFormElement = $(selectOption).attr({ id: "CourseModuleForm" });
                            newFormElement.appendTo("#CourseModuleForm");
                            $("#dpdCourseModuleAssociate").select2();
                        }
                        else {
                            $('#CourseModuleForm > .div2:last').remove();
                            $('#dpdCourseModuleTyee').val("");
                            bootbox.alert("There is no registered " + courseModuleTyee);
                        }
                    },
                    error: function () {
                        bootbox.alert("Error has occured!!!.");
                    }
                });
                //////////
            });

            $('body').on('change', "#dpdCourseTyee", function () {

                var getListUrl = "";
                var courseTyee = $('#dpdCourseTyee').val();
                if (courseTyee == 'Module')
                    getListUrl = "/Modules/ListCourseModule";
                if (courseTyee == 'Prerequisite')
                    getListUrl = "/Courses/ListCourse";
                if (courseTyee == 'CourseExam')
                    getListUrl = "/Exams/ListExam";

                var getPhaseList = "/Categories/ListPhase";
                var phaseSelectOption = "";
                var courseId = $('#txtCourseId').val();
                //alert(courseId);
                //
                var UrlData = {
                    'CourseCategoryId': parseInt(courseId)
                };

                if (courseTyee == 'Module') {

                    $.ajax({
                        url: getListUrl,
                        type: 'GET',
                        data: UrlData,
                        success: function (result) {
                            if (result.hasList) {

                                var selectOption = "";
                                var option = '<option value="">--Please Select--</option>';;
                                jQuery.each(result.resultData, function (index, item) {
                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                });
                                selectOption = '<div class="form-group div1">' + '<label class="col-md-4 control-label" for="name">' + courseTyee + '</label> '
                                + '<div class="col-md-6">' +
                                    '<select id="dpdCourseAssociate" name="dpdCourseAssociate" class="form-control select2" multiple="multiple" data-val="true" data-val-required="' + courseTyee + ' is required." data-placeholder="Select" style="width: 100%;" required>'
                                + option + '</select>'
                                + '</div> ' + '</div> ';

                                $('#CourseForm > .div1:last').remove();
                                $('#CourseForm > .div1:last').remove();

                                var newFormElement = $("#CourseForm");
                                newFormElement = $(selectOption).attr({ id: "CourseForm" });
                                newFormElement.appendTo("#CourseForm");


                                $("#dpdCourseAssociate").select2();


                                if (courseTyee == 'Module') {

                                    $.ajax({
                                        url: getPhaseList,
                                        type: 'GET',
                                        success: function (result) {
                                            if (result) {
                                                //Construct UI Element
                                                option = '<option value="">--Select Phase--</option>';
                                                jQuery.each(result.resultData, function (index, item) {
                                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                                });
                                                phaseSelectOption = '<div class="form-group div1">' + '<label class="col-md-4 control-label" for="name"> Phase </label> '
                                    + '<div class="col-md-6">' +
                                        '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="required form-control" data-val="true" data-val-required="Phase is required.">'
                                                + option + '</select>'
                                    + '</div> ' + '</div> ';

                                                //    '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="required form-control" data-val="true" data-val-required="Phase is required.">'
                                                //+ option + '</select>';

                                                var newFormElement1 = $("#CourseForm");
                                                newFormElement1 = $(phaseSelectOption).attr({ id: "CourseForm" });
                                                newFormElement1.appendTo("#CourseForm");
                                            }
                                        },
                                        error: function () {
                                            bootbox.alert("Error has occured!!!.");
                                        }
                                    });//END OF PHASE LIST
                                }
                            }
                            else {
                                bootbox.alert("There is no registered " + courseTyee);
                            }
                        },
                        error: function () {
                            bootbox.alert("Error has occured!!!.");
                        }
                    });

                    //////////
                }
                else {
                    $.ajax({
                        url: getListUrl,
                        type: 'GET',
                        success: function (result) {
                            if (result.hasList) {

                                var selectOption = "";
                                var option = '<option value="">--Please Select--</option>';;
                                jQuery.each(result.resultData, function (index, item) {
                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                });
                                selectOption = '<div class="form-group div1">' + '<label class="col-md-4 control-label" for="name">' + courseTyee + '</label> '
                                + '<div class="col-md-6">' +
                                    '<select id="dpdCourseAssociate" name="dpdCourseAssociate" class="form-control select2" multiple="multiple" data-val="true" data-val-required="' + courseTyee + ' is required." data-placeholder="Select" style="width: 100%;" required>'
                                + option + '</select>'
                                + '</div> ' + '</div> ';

                                $('#CourseForm > .div1:last').remove();
                                $('#CourseForm > .div1:last').remove();

                                var newFormElement = $("#CourseForm");
                                newFormElement = $(selectOption).attr({ id: "CourseForm" });
                                newFormElement.appendTo("#CourseForm");


                                $("#dpdCourseAssociate").select2();


                                if (courseTyee == 'Module') {

                                    $.ajax({
                                        url: getPhaseList,
                                        type: 'GET',
                                        success: function (result) {
                                            if (result) {
                                                //Construct UI Element
                                                option = '<option value="">--Select Phase--</option>';
                                                jQuery.each(result.resultData, function (index, item) {
                                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                                });
                                                phaseSelectOption = '<div class="form-group div1">' + '<label class="col-md-4 control-label" for="name"> Phase </label> '
                                    + '<div class="col-md-6">' +
                                        '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="required form-control" data-val="true" data-val-required="Phase is required.">'
                                                + option + '</select>'
                                    + '</div> ' + '</div> ';

                                                //    '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="required form-control" data-val="true" data-val-required="Phase is required.">'
                                                //+ option + '</select>';

                                                var newFormElement1 = $("#CourseForm");
                                                newFormElement1 = $(phaseSelectOption).attr({ id: "CourseForm" });
                                                newFormElement1.appendTo("#CourseForm");
                                            }
                                        },
                                        error: function () {
                                            bootbox.alert("Error has occured!!!.");
                                        }
                                    });//END OF PHASE LIST
                                }
                            }
                            else {
                                bootbox.alert("There is no registered " + courseTyee);
                            }
                        },
                        error: function () {
                            bootbox.alert("Error has occured!!!.");
                        }
                    });

                    //////////
                }
            });
            //jQuery code used for Tree State Management

            //Begin - Code used for handling State management
            //Category,CourseAndLesson,CourseModule

            $('#curriculumTree').on('click', '.Program-State-Management', function (event) {
                debugger

                if (actionType == '') {
                    debugger;
                    var leafId = $(this).attr('id');
                    actionType = leafId;
                    SaveTreeState(leafId);
                }
                else {
                    if (actionType != '') {
                        actionType = '';
                    }
                }
            });

            $('#curriculumTree').on('click', '.Category-State-Management', function (event) {
                debugger;
                //alert(event.target.tagName + ' ' + actionType);
                if (actionType == '') {
                    debugger;
                    var leafId = $(this).attr('id');
                    actionType = leafId;
                    SaveTreeState(leafId);
                }
            });
            $('#curriculumTree').on('click', '.CourseAndLesson-State-Management', function (event) {
                debugger;
                if (actionType == '') {
                    debugger;
                    var leafId = $(this).attr('id');
                    actionType = leafId;
                    SaveTreeState(leafId);
                }
            });
            $('#curriculumTree').on('click', '.CourseModule-State-Management', function (event) {
                debugger;
                if (actionType == '') {
                    debugger;
                    var leafId = $(this).attr('id');
                    actionType = leafId;
                    SaveTreeState(leafId);
                }
            });

            function SaveTreeState(leafId) {

                debugger;

                var treeState = $.cookie("TreeState");
                if (treeState != null && treeState != 'undefined' && treeState != '') {

                    treeLeafIdsArray = treeState.split(',');
                    var index = $.inArray(leafId, treeLeafIdsArray);

                    if (index == -1) {
                        //Leaf Id is not in the list
                        if (!($('#' + leafId).hasClass("active"))) {
                            treeLeafIdsArray.push(leafId);
                            $.removeCookie('TreeState', { path: '/' });
                            $.cookie("TreeState", treeLeafIdsArray.join(","), { path: '/' });
                        }
                    }
                    else {
                        if (($('#' + leafId).hasClass("active"))) {
                            treeLeafIdsArray.splice(index, 1);
                            $.removeCookie('TreeState', { path: '/' });
                            $.cookie("TreeState", treeLeafIdsArray.join(","), { path: '/' });
                        }
                    }
                    //event
                }
                else {
                    //The array is not initialized yet.
                    if (!$("#" + leafId).hasClass("active")) {
                        $.cookie("TreeState", leafId, { path: '/' });
                    }
                }
            }

            //End - Code used for handling State management

            $('#curriculumTree').on('click', '.New-Curriculum', function (event) {

                //alert(event.target.tagName);
                var dataIds = $(this).attr('data-id');
                var dataArray = dataIds.split('~');

                var parentId = dataArray[0];
                currentElementId = dataArray[1];
                var treeLevel = dataArray[2];
                var currentElementName = dataArray[3];
                //alert('Delete parentId=' + dataArray[0] + " currentElementId=" + dataArray[1] + " treeLevel=" + dataArray[2] + " currentElementName= " + dataArray[3]);

                var addURL = "";
                var getListUrl = "";
                var UrlData = {}
                var dataForList = {}
                var option = "";
                var GUI = "";

                if (treeLevel == "ProgramHierarchy")//(int ProgramId, int CategoryId
                {
                    addURL = "/Programs/AddCategory";
                    getListUrl = "/Categories/ListCategory";//ListCategory(int ProgramId
                    dataForList = { ProgramId: currentElementId }
                    //alert('Program Hierarchy');
                    //Get specific List
                    $.ajax({
                        url: getListUrl,
                        type: 'GET',
                        success: function (result) {
                            if (result.hasList) {
                                //Construct UI Element
                                option = '<option value="">--Select Category--</option>';
                                jQuery.each(result.resultData, function (index, item) {
                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                });
                                GUI = '<div class="row"> ' + '<div class="col-md-12">' + '<form class="form-horizontal">' + '<div class="form-group">' +
                                '<label class="col-md-6 col-lg-6 col-sm-6 col-xs-6 control-label col-md-pull-1" for="name">' + currentElementName + '</label> ' + '</div>' + '<div class="form-group">' + '<div class="col-md-6">' +
                                '<select id="dpdCategoryAssociate" name="dpdCategoryAssociate" class="form-control select2" data-val="true" '
                                + 'data-val-required="Category is required." multiple="multiple" data-placeholder="Select a Category" style="width: 100%;">' + option + ' </select>' + '</div> '
                                + '</div> ' + ' </form></div></div>';

                                //Perform Add Operation     text = text.replace("lollypops", "marshmellows");
                                bootbox.dialog({
                                    title: treeLevel,
                                    message: GUI,
                                    buttons: {
                                        success: {
                                            label: "Save",
                                            className: "btn-success",
                                            callback: function () {

                                                var categoryId = $('#dpdCategoryAssociate').val();//int ProgramId, int CategoryId

                                                /////////////
                                                $.ajax({
                                                    url: addURL,
                                                    type: 'GET',
                                                    data: { ProgramId: parseInt(currentElementId), CategoryId: categoryId.toString() },
                                                    success: function (result) {
                                                        if (result.Result.status) {
                                                            location.href = "/Curriculum/index?programId=" + $('#txtProgramId').val() + "&message=" + result.Result.message;
                                                            //location.reload();
                                                        }
                                                        else {
                                                            bootbox.alert(result.Result.message);
                                                        }
                                                    },
                                                    error: function () {
                                                        bootbox.alert("Error has occured!!!.");
                                                    }
                                                });
                                                //////////
                                            }
                                        }
                                    }
                                }).init(function () {
                                    $("#dpdCategoryAssociate").select2();
                                });
                                ///////////////////
                            }
                            else {
                                bootbox.alert("There is no registered category list.");
                            }
                        },
                        error: function () {
                            bootbox.alert("Error has occured!!!.");
                        }
                    });

                }
                if (treeLevel == "CategoryView")//(int ProgramId, int CategoryId
                {
                    var categoryType = dataArray[4];

                    debugger;
                    //Newlly Added
                    var lableName = "";
                    var getPhaseList = "";
                    var getStageList = "";

                    var phaseSelectOption = "";
                    var stageSelectOption = "";
                    //Newlly Added
                    if (categoryType == "Ground") {
                        getListUrl = "/Courses/ListCourseByCategoryId";
                        addURL = "/Categories/AddCourse";//AddCourse(int CourseId, int CategoryId, int PhaseId)
                        lableName = "Course";
                    }
                    else {
                        getListUrl = "/Lessons/ListLessonByCategoryTypeId";
                        addURL = "/Categories/AddLesson";//AddLesson(int LessonId, int CategoryId, int PhaseId)
                        lableName = "Lesson";
                        /*
                        //Populate Phase
                        getPhaseList = "/Categories/ListPhase";

                        $.ajax({
                            url: getPhaseList,
                            type: 'GET',
                            success: function (result) {
                                if (result) {
                                    //Construct UI Element
                                    option = '<option value="">--Select Phase--</option>';
                                    jQuery.each(result.resultData, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    phaseSelectOption = '<div class="form-group">' + '<label class="col-md-4 control-label" for="name"> Phase </label> '
                        + '<div class="col-md-6">' +
                            '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="form-control" data-val="true" data-val-required="Phase is required." data-placeholder="Select a Phase" style="width: 100%;" required>'
                                    + option + '</select>'
                        + '</div> ' + '</div> ';
                                }
                            },
                            error: function () {
                                bootbox.alert("Error has occured!!!.");
                            }
                        });//END OF PHASE LIST

                        //Populate Stage
                        getStageList = "/Categories/ListStage";

                        $.ajax({
                            url: getStageList,
                            type: 'GET',
                            success: function (result) {
                                if (result) {
                                    //Construct UI Element
                                    option = '<option value="">--Select Stage--</option>';
                                    jQuery.each(result.resultData, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    stageSelectOption = '<div class="form-group">' + '<label class="col-md-4 control-label" for="name"> Stage </label> '
                        + '<div class="col-md-6">' +
                            '<select id="dpdStageAssociate" name="dpdStageAssociate" class="form-control" data-val="true" data-val-required="Stage is required." data-placeholder="Select a Stage" style="width: 100%;" required>'
                                    + option + '</select>'
                        + '</div> ' + '</div> ';
                                }
                            },
                            error: function () {
                                bootbox.alert("Error has occured!!!.");
                            }
                        });//END OF PHASE LIST

                        */
                    }

                    var courseSelectOption = "";
                    //alert(currentElementId);
                    var data = {
                        'programCategoryId': currentElementId
                    };

                    $.ajax({
                        url: getListUrl,
                        type: 'GET',
                        data: data,
                        success: function (result) {
                            if (result.hasList) {
                                //Construct UI Element
                                if (categoryType == "Ground") {
                                    option = '<option value="">--Please Select--</option>';
                                    jQuery.each(result.resultData, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    courseSelectOption =
                                         '<select id="dpdAssociateList" name="dpdAssociateList" class="form-control select2" multiple="multiple" data-val="true" data-val-required="Category is required." data-placeholder="Select" style="width: 100%;" required>'
                                    + option + '</select>';

                                    GUI = '<div class="row">' + '<div class="col-md-12">' + '<form class="form-horizontal">'
                                        + '<div class="form-group">' + '<label class="col-md-6 control-label" for="name">' + currentElementName + '</label> '
                                        + '</div>' + '<div class="form-group">' + '<label class="col-md-4 control-label" for="name">' + lableName + '</label> '
                                        + '<div class="col-md-6">' + courseSelectOption + '</div> '
                                        + '</div>';
                                }
                                else {
                                    //////////////////////////Construct Lesson////////////////////////
                                    option = '<option value="">--Please Select--</option>';
                                    jQuery.each(result.LessonList, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    courseSelectOption =
                                         '<select id="dpdAssociateList" name="dpdAssociateList" class="form-control select2" multiple="multiple" data-val="true" data-val-required="Category is required." data-placeholder="Select" style="width: 100%;" required>'
                                    + option + '</select>';

                                    GUI = '<div class="row">' + '<div class="col-md-12">' + '<form class="form-horizontal">'
                                        + '<div class="form-group">' + '<label class="col-md-6 control-label" for="name">' + currentElementName + '</label> '
                                        + '</div>' + '<div class="form-group">' + '<label class="col-md-4 control-label" for="name">' + lableName + '</label> '
                                        + '<div class="col-md-6">' + courseSelectOption + '</div> '
                                        + '</div>';

                                    //////////////////////////Construct Phase////////////////////////
                                    option = '<option value="">--Select Phase--</option>';
                                    jQuery.each(result.PhaseList, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    phaseSelectOption = '<div class="form-group">' + '<label class="col-md-4 control-label" for="name"> Phase </label> '
                        + '<div class="col-md-6">' +
                            '<select id="dpdPhaseAssociate" name="dpdPhaseAssociate" class="form-control" data-val="true" data-val-required="Phase is required." data-placeholder="Select a Phase" style="width: 100%;" required>'
                                    + option + '</select>'
                        + '</div> ' + '</div> ';
                                    //////////////////////////Construct Stage////////////////////////
                                    option = '<option value="">--Select Stage--</option>';
                                    jQuery.each(result.StageList, function (index, item) {
                                        option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                    });
                                    stageSelectOption = '<div class="form-group">' + '<label class="col-md-4 control-label" for="name"> Stage </label> '
                        + '<div class="col-md-6">' +
                            '<select id="dpdStageAssociate" name="dpdStageAssociate" class="form-control" data-val="true" data-val-required="Stage is required." data-placeholder="Select a Stage" style="width: 100%;" required>'
                                    + option + '</select>'
                        + '</div> ' + '</div> ';
                                    //////////////////////////End, NEW///////////////////////
                                }


                                debugger;
                                if (categoryType != "Ground") {
                                    GUI = GUI + stageSelectOption;
                                    GUI = GUI + phaseSelectOption
                                }
                                GUI = GUI + '</form></div></div>';
                                //Perform Add Operation
                                bootbox.dialog({
                                    title: treeLevel.replace("View", ""),
                                    message: GUI,
                                    buttons: {
                                        success: {
                                            label: "Save",
                                            className: "btn-success",
                                            callback: function () {


                                                var associatedId = $('#dpdAssociateList').val();
                                                var phaseId = $('#dpdPhaseAssociate').val();
                                                var stageId = $('#dpdStageAssociate').val();
                                                if (stageId == "") {
                                                    stageId = 0;
                                                }

                                                //int CourseId, int CategoryId
                                                if (categoryType == "Ground") {
                                                    UrlData = {
                                                        'CourseId': associatedId.toString(),
                                                        'CategoryId': parseInt(currentElementId)
                                                    };
                                                }
                                                else {
                                                    UrlData = {
                                                        'LessonId': associatedId.toString(),
                                                        'CategoryId': currentElementId,
                                                        'phaseId': phaseId,
                                                        'stageId': stageId
                                                    };
                                                }
                                                $.ajax({
                                                    url: addURL,
                                                    type: 'GET',
                                                    data: UrlData,
                                                    success: function (result) {
                                                        if (result.Result.status) {
                                                            location.href = "/Curriculum/index?programId=" + $('#txtProgramId').val() + "&message=" + result.Result.message;
                                                            //location.reload();
                                                        }
                                                        else {
                                                            bootbox.alert(result.Result.message);
                                                        }
                                                    },
                                                    error: function () {
                                                        bootbox.alert("Error has occured!!!.");
                                                    }
                                                });
                                                //////////
                                            }
                                        }
                                    }
                                }).init(function () {
                                    $("#dpdAssociateList").select2();
                                });
                                ///////////////////

                            }
                            else {
                                bootbox.alert("There is no registered lesson or course.");
                            }
                        },
                        error: function () {
                            bootbox.alert("Error has occured!!!.");
                        }
                    });
                }
                else if (treeLevel == "CourseView")//AddCourse(int CourseId, int CategoryId, int PhaseId)
                {
                    /////////////////////////////////////////////////////////////////////////////////
                    //Perform Add Operation
                    $('#txtCourseId').val(currentElementId);
                    GUI =
                            '<div class="row">' + '<div class="col-md-12">' + '<form class="form-horizontal" id="CourseForm">'
                            + '<div class="form-group div1">' + '<label class="col-md-6 control-label" for="name">' + currentElementName + '</label> '
                            + '</div>' + '<div class="form-group">' + '<label class="col-md-4 control-label" for="name">Type</label> '
                            + '<div class="col-md-6">' + '<select id="dpdCourseTyee" name="dpdCourseType" class="required form-control" data-val="true" data-val-required="Course Type is required.">'
                            + '<option value="">--Select--</option>' + '<option value="Module">Module</option>' + '<option value="Prerequisite">Prerequisite</option>'
                            + '<option value="CourseExam">Course Exam</option>' + '</select>' + '</div> '
                            + '</div> ' + '</form></div></div>';



                    box = bootbox.dialog({
                        title: treeLevel.replace("View", ""),
                        message: GUI,
                        buttons: {
                            success: {
                                label: "Save",
                                className: "btn-success",
                                callback: function () {
                                    //dpdCourseAssociate
                                    var AssociateToCourseId = $('#dpdCourseAssociate').val();
                                    var PhaseId = $('#dpdPhaseAssociate').val();

                                    var courseType = $('#dpdCourseTyee').val();//int ProgramId, int CategoryId
                                    if (courseType == 'Module') {
                                        addURL = "/Courses/AddModule";//AddModule(int ModuleId, int CourseId)
                                        UrlData = {
                                            'ModuleId': AssociateToCourseId.toString(),
                                            'CourseId': currentElementId,
                                            'PhaseId': PhaseId
                                        };
                                    }
                                    if (courseType == 'Prerequisite')//AddPrerequisite(int LessonId, int CourseId)
                                    {
                                        addURL = "/Courses/AddPrerequisite";
                                        UrlData = {
                                            'CourseId': currentElementId,
                                            'PrerequisiteId': AssociateToCourseId.toString()
                                        };
                                    }
                                    if (courseType == 'CourseExam')//AddExam(int ExamId, int CourseId)
                                    {
                                        addURL = "/Courses/AddExam";
                                        UrlData = {
                                            'ExamId': AssociateToCourseId.toString(),
                                            'CourseId': currentElementId
                                        };
                                    }
                                    /////////////
                                    $.ajax({
                                        url: addURL,
                                        type: 'GET',
                                        data: UrlData,
                                        success: function (result) {
                                            if (result.Result.status) {
                                                location.href = "/Curriculum/index?programId=" + $('#txtProgramId').val() + "&message=" + result.Result.message;
                                            }
                                            else {
                                                bootbox.alert(result.Result.message);
                                            }
                                        },
                                        error: function () {
                                            bootbox.alert("Error has occured!!!.");
                                        }
                                    });
                                    //////////
                                }
                            }
                        }
                    });
                }

                else if (treeLevel == "LessonView")//AddLesson(int LessonId, int CategoryId, int PhaseId)
                {
                    addURL = "/Lessons/AddExam";//AddExam(int ExamId, int LessonId)
                    getListUrl = "/EvaluationTemplates/ListEvaluationTemplate";//ListExam(int LessonId)

                    $.ajax({
                        url: getListUrl,
                        type: 'GET',
                        data: { LessonId: parseInt(currentElementId) },
                        success: function (result) {
                            if (result.hasList) {

                                var option = "";
                                option = '<option value="">--Select Evaluation Template--</option>';
                                jQuery.each(result.resultData, function (index, item) {
                                    option = option + '<option value="' + item.Id + '">' + item.Name + '</option>';
                                });

                                GUI = '<div class="row"> ' + '<div class="col-md-12">' + '<form class="form-horizontal">' + '<div class="form-group">' +
                                '<label class="col-md-6 control-label" for="name">' + currentElementName + '</label> ' + '</div>' + '<div class="form-group">'
                               + '<label class="col-md-4 control-label" for="name">Exam</label> ' + '<div class="col-md-6">' +
                                '<select id="dpdLessonAssociate" name="dpdLessonAssociate" class="form-control select2" data-val="true" ' + 'data-val-required="Category is required." multiple="multiple" data-placeholder="Select" style="width: 100%;" required >' + option + ' </select>'
                                + '</div> ' + '</div> ' + ' </form></div></div>';

                                /////////////
                                bootbox.dialog({
                                    title: treeLevel.replace("View", ""),
                                    message: GUI,
                                    buttons: {
                                        success: {
                                            label: "Save",
                                            className: "btn-success",
                                            callback: function () {
                                                //dpdCourseAssociate
                                                var LessonExamId = $('#dpdLessonAssociate').val();
                                                /////////////
                                                $.ajax({
                                                    url: addURL,
                                                    type: 'GET',
                                                    data: { ExamId: LessonExamId.toString(), LessonId: currentElementId },
                                                    success: function (result) {
                                                        if (result.Result.status) {
                                                            //location.reload();
                                                            location.href = "/Curriculum/index?programId=" + $('#txtProgramId').val() + "&message=" + result.Result.message;
                                                            //bootbox.alert("Successfully associated.");
                                                        }
                                                        else {
                                                            bootbox.alert(result.Result.message);
                                                        }
                                                    },
                                                    error: function () {
                                                        bootbox.alert("Error has occured!!!.");
                                                    }
                                                });
                                                //////////
                                            }
                                        }
                                    }
                                }).init(function () {
                                    $("#dpdLessonAssociate").select2();
                                });
                            }
                            else {
                                bootbox.alert("There is no registered Evaluation Template!.");
                            }
                        },
                        error: function () {
                            bootbox.alert("Error has occured!!!.");
                        }
                    });
                    //////////
                }
                else if (treeLevel == "ModuleView")//AddModule(int ModuleId, int CourseId)
                {
                    GUI =
                            '<div class="row">' + '<div class="col-md-12">' + '<form class="form-horizontal" id="CourseModuleForm">'
                            + '<div class="form-group div2">' + '<label class="col-md-6 control-label" for="name">' + currentElementName + '</label> '
                            + '</div>' + '<div class="form-group">' + '<label class="col-md-4 control-label" for="name">Type</label> '
                            + '<div class="col-md-6">' + '<select id="dpdCourseModuleTyee" name="dpdCourseModuleTyee" class="form-control" data-val="true" data-val-required="Course Module Type is required." required>'
                            + '<option value="">--Select--</option>' + '<option value="Exam">Exam</option>' + '<option value="GroundLesson">GroundLesson</option>'
                            + '</select>' + '</div> '
                            + '</div> ' + '</form></div></div>';

                    box = bootbox.dialog({
                        title: treeLevel.replace("View", ""),
                        message: GUI,
                        buttons: {
                            success: {
                                label: "Save",
                                className: "btn-success",
                                callback: function () {

                                    var AssociateToCourseModuleId = $('#dpdCourseModuleAssociate').val();

                                    var courseModuleType = $('#dpdCourseModuleTyee').val();

                                    if (courseModuleType == 'Exam') {
                                        addURL = "/Modules/AddExam";
                                        UrlData = {
                                            'ExamId': AssociateToCourseModuleId.toString(),
                                            'ModuleId': currentElementId
                                        };
                                    }
                                    if (courseModuleType == 'GroundLesson') {
                                        addURL = "/Modules/AddGroundLesson";
                                        UrlData = {
                                            'moduleGroundLessonId': AssociateToCourseModuleId.toString(),
                                            'courseModuleId': currentElementId
                                        };
                                    }
                                    /////////////
                                    $.ajax({
                                        url: addURL,
                                        type: 'GET',
                                        data: UrlData,
                                        success: function (result) {
                                            if (result.Result.status) {
                                                location.href = "/Curriculum/index?programId=" + $('#txtProgramId').val() + "&message=" + result.Result.message;
                                            }
                                            else {
                                                bootbox.alert(result.Result.message);
                                            }
                                        },
                                        error: function () {
                                            bootbox.alert("Error has occured!!!.");
                                        }
                                    });
                                    //////////
                                }
                            }
                        }
                    });
                }
            });

            $('#curriculumTree').on('click', '.View-Curriculum', function () {

                var dataIds = $(this).attr('data-id');

                var dataArray = dataIds.split('~');

                var parentId = dataArray[0];
                currentElementId = dataArray[1];
                var treeLevel = dataArray[2];
                var currentElementName = dataArray[3];


                //alert('Delete parentId=' + dataArray[0] + " currentElementId=" + dataArray[1] + " treeLevel=" + dataArray[2] + " currentElementName= " + dataArray[3]);
                var serviceURL = "";
                var CurriculumTitle = "";
                var urlData = {}
                //LessonEvaluationTemplateView,ModuleExamView,LessonExamView,ProgramHierarchy,CategoryView,CourseView,LessonView,ModuleView,CourseExamView,PrerequisiteView

                if (treeLevel == "ProgramHierarchy") {
                    serviceURL = "/Programs/ProgramDetailPartialView?programId=" + currentElementId;
                    CurriculumTitle = "Program Detail";
                }
                if (treeLevel == "CategoryView") {
                    serviceURL = "/Categories/CategoryDetailPartialView?ProgramCategoryId=" + currentElementId;
                    CurriculumTitle = "Category Detail";
                }
                else if (treeLevel == "CourseView") {
                    serviceURL = "/Courses/CourseDetailPartialView?CourseCategoryId=" + currentElementId;
                    CurriculumTitle = "Course Detail";
                }
                else if (treeLevel == "CourseExamView") {
                    var examType = "Course";
                    serviceURL = "/Exams/ExamDetailPartialView?idNumber=" + currentElementId + "&examType=" + examType;
                    CurriculumTitle = "Exam Detail";
                }
                else if (treeLevel == "PrerequisiteView") {
                    serviceURL = "/Prerequisites/PrerequisiteDetailPartialView?prerequisiteId=" + currentElementId;
                    CurriculumTitle = "Prerequisite Detail";
                }
                else if (treeLevel == "ModuleView") {
                    serviceURL = "/Modules/ModuleDetailPartialView?courseModuleId=" + currentElementId;
                    CurriculumTitle = "Module Detail";
                }
                else if (treeLevel == "ModuleExamView") {
                    var examType = "Module";
                    serviceURL = "/Exams/ExamDetailPartialView?idNumber=" + currentElementId + "&examType=" + examType;
                    CurriculumTitle = "Exam Detail";
                }
                else if (treeLevel == "LessonView") {
                    serviceURL = "/Lessons/LessonDetailPartialView?lessonCategoryId=" + currentElementId;
                    CurriculumTitle = "Lesson Detail";
                }
                else if (treeLevel == "LessonEvaluationTemplateView") {
                    serviceURL = "/EvaluationTemplates/EvaluationTemplateDetailPartialView?lessonEvaluationTemplateId=" + currentElementId;
                    CurriculumTitle = "Evaluation Template Detail";
                }
                else if (treeLevel == "ModuleGroundLessonView") {
                    serviceURL = "/GroundLessons/GroundLessonsDetailPartialView?moduleGroundLessonId=" + currentElementId;
                    CurriculumTitle = "Ground Lesson Detail";
                }
                //CurriculumDetailPopupModel,CurriculemDetail-Container,CurriculumTitle

                $('#CurriculemDetail-Container > .EvaluationItemContainer:last').remove();

                $.get(serviceURL, function (data) {
                    //Put the Partial view in modal popup
                    $('#CurriculemDetail-Container').html(data);
                    //Set the modal popup title
                    $('#CurriculumTitle').html(CurriculumTitle);
                    //Show modal popup
                    $('#CurriculumDetailPopupModel').modal('show');
                });

            });

            $('#curriculumTree').on('click', '.Delete-Curriculum', function () {

                var dataIds = $(this).attr('data-id');

                var dataArray = dataIds.split('~');

                var parentId = dataArray[0];
                currentElementId = dataArray[1];
                var treeLevel = dataArray[2];
                var currentElementName = dataArray[3];

                //alert('Delete parentId=' + dataArray[0] + " currentElementId=" + dataArray[1] + " treeLevel=" + dataArray[2] + " currentElementName= " + dataArray[3]);
                var serviceURL = "";
                var urlData = {}
                //LessonEvaluationTemplateView,ModuleExamView,LessonExamView,ProgramHierarchy,CategoryView,CourseView,LessonView,ModuleView,CourseExamView,PrerequisiteView

                if (treeLevel == "ProgramHierarchy") 
                {
                    serviceURL = "/Programs/RemoveProgram";
                    urlData = {
                        'ProgramId': currentElementId
                    };
                }
                if (treeLevel == "CategoryView")
                {
                    serviceURL = "/Programs/RemoveCategory";
                    urlData = {                        
                        'CategoryId': currentElementId
                    };
                }

                else if (treeLevel == "CourseView")
                {
                    serviceURL = "/Categories/RemoveCourse";
                    urlData = {
                        'courseCategoryId': currentElementId
                    };
                }
                else if (treeLevel == "CourseExamView") {
                    serviceURL = "/Courses/RemoveCourseExam";
                    urlData = {
                        'courseExamId': currentElementId
                    };
                }

                else if (treeLevel == "PrerequisiteView")//RemovePrerequisite(int LessonId, int CourseId)
                {
                    serviceURL = "/Courses/RemovePrerequisite";
                    urlData = {
                        'prerequisiteId': currentElementId
                    };
                }

                else if (treeLevel == "ModuleView")//RemoveModule(int ModuleId, int CourseId)
                {
                    serviceURL = "/Courses/RemoveCourseModule";
                    urlData = {
                        'courseModuleId': currentElementId
                    };
                }

                else if (treeLevel == "ModuleExamView")//RemoveExam(int ExamId, int ModuleId)
                {
                    serviceURL = "/Modules/RemoveModuleExam";
                    urlData = {
                        'moduleExamId': currentElementId
                    };
                }

                else if (treeLevel == "LessonView")//RemoveLesson(int LessonId, int CategoryId)
                {
                    serviceURL = "/Categories/RemoveLessonCategory";
                    urlData = {
                        'lessonCategoryId': currentElementId
                    };
                }

                else if (treeLevel == "LessonEvaluationTemplateView")//RemoveExam(int ExamId, int LessonId)
                {
                    serviceURL = "/Lessons/RemoveLessonEvaluationTemplate";
                    urlData = {
                        'lessonEvaluationTemplateId': currentElementId
                    };
                }

                else if (treeLevel == "ModuleGroundLessonView")//RemoveGroundLesson(int groundLessonId, int courseModuleId)
                {                   
                    serviceURL = "/Modules/RemoveModuleGroundLesson";
                    urlData = {
                        'moduleGroundLessonId': currentElementId
                    };
                }

                bootbox.dialog({
                    message: currentElementName,
                    title: "Are you sure you want to delete this " + currentElementName + "?",
                    buttons: {
                        success: {
                            label: "Yes",
                            className: "btn-success",
                            callback: function () {
                                $.ajax({
                                    url: serviceURL,
                                    type: 'GET',
                                    data: urlData,
                                    success: function (result) {
                                        if (result.Result.status) {
                                            location.reload();
                                            //bootbox.alert("Successfully deleted.");
                                        }
                                        else {
                                            SetTreeState();
                                            bootbox.alert(result.Result.message);
                                        }
                                    },
                                    error: function () {
                                        bootbox.alert("Error has occured!!!.");
                                    }
                                });
                            }
                        },
                        danger: {
                            label: "No",
                            className: "btn-danger",
                            callback: function () {                               
                                SetTreeState();
                                bootbox.hideAll()
                            }
                        }
                    }
                });
            });
                      

            function SetTreeState() {
                debugger;
                var treeStateIdsString = $.cookie("TreeState");
                if (treeStateIdsString != null && treeStateIdsString != 'undefined' && treeStateIdsString != "") {

                    var treeLeafIdsArray = treeStateIdsString.split(',');
                    for (var i = 0; i < treeLeafIdsArray.length; i++) {
                        $('#' + treeLeafIdsArray[i]).addClass('active');
                    }
                }
            }
        });
    </script>
}

<br />



<!-- sidebar: style can be found in sidebar.less -->

<section class="sidebar CurriculemTreeViewController">

    <ul class="sidebar-menu" id="curriculumTree">
        @{                        //Begin

            if (ViewBag.ProgramHierarchy != null)
            {
                ProgramHierarchy programHierarchy = (ProgramHierarchy)ViewBag.ProgramHierarchy;

                <li class="treeview active Program-State-Management" id="@programHierarchy.Type@programHierarchy.Id">
                    <a href="#">
                        @*<i class="fa fa-share"></i>*@
                        <span>
                            @programHierarchy.Name
                            <button class='btn btn-info btn-xs New-Curriculum' data-id='@programHierarchy.Id~@programHierarchy.Id~@programHierarchy.Type~@programHierarchy.Name' title='New'>
                                <i class="fa fa-plus"></i>
                            </button>
                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@programHierarchy.Id~@programHierarchy.Id~@programHierarchy.Type~@programHierarchy.Name' title='View'>
                                <i class=" fa fa-eye"></i>
                            </button>
                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@programHierarchy.Id~@programHierarchy.Id~@programHierarchy.Name' title='Edit'>
                                &nbsp;<i class=" fa fa-edit"></i>
                                </button>*@
                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@programHierarchy.Id~@programHierarchy.Id~@programHierarchy.Type~@programHierarchy.Name' title='Delete'>
                                &nbsp;<i class=" fa fa-remove"></i>
                            </button>
                        </span>
                    </a>
                    @if (programHierarchy.CategoryList != null)
                    {
                        foreach (var cat in programHierarchy.CategoryList)
                        {
                            <ul class="treeview-menu">
                                <li class="treeview Category-State-Management" id="@cat.Type@cat.Id">
                                    <a href="#">
                                        @if (cat.CourseList.Count() > 0 || cat.LessonList.Count() > 0)
                                        {
                                            <i class="fa fa-angle-left pull-left"></i>
                                        }
                                        <span>
                                            @cat.Name
                                            <button class='btn btn-info btn-xs New-Curriculum' data-id='@programHierarchy.Id~@cat.Id~@cat.Type~@cat.Name~@cat.CategoryType' title='New'>
                                                <i class="fa fa-plus"></i>
                                            </button>
                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@programHierarchy.Id~@cat.Id~@cat.Type~@cat.Name~@cat.CategoryType' title='View'>
                                                <i class=" fa fa-eye"></i>
                                            </button>
                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@programHierarchy.Id~@cat.Id~@cat.Type~@cat.Name~@cat.CategoryType' title='Edit'>
                                                &nbsp;<i class=" fa fa-edit"></i>
                                                </button>*@
                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@programHierarchy.Id~@cat.Id~@cat.Type~@cat.Name~@cat.CategoryType' title='Delete'>
                                                &nbsp;<i class=" fa fa-remove"></i>
                                            </button>
                                        </span>
                                    </a>
                                    @if (cat.CourseList != null)
                                    {
                                        foreach (var course in cat.CourseList)
                                        {
                                            <ul class="treeview-menu">
                                                <li class="treeview CourseAndLesson-State-Management" id="@course.Type@course.Id">
                                                    <a href="#">
                                                        @if (course.CourseExamList.Count() > 0 || course.PrerequisiteList.Count() > 0 || course.ModuleList.Count() > 0)
                                                        {
                                                            <i class="fa fa-angle-left pull-left"></i>
                                                        }
                                                        <span>
                                                            @course.Name
                                                            <button class='btn btn-info btn-xs New-Curriculum' data-id='@cat.Id~@course.Id~@course.Type~@course.Name' title='New'>
                                                                <i class="fa fa-plus"></i>
                                                            </button>
                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@cat.Id~@course.Id~@course.Type~@course.Name' title='View'>
                                                                <i class=" fa fa-eye"></i>
                                                            </button>
                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@cat.Id~@course.Id~@course.Type~@course.Name' title='Edit'>
                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                </button>*@
                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@cat.Id~@course.Id~@course.Type~@course.Name' title='Delete'>
                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                            </button>

                                                        </span>
                                                    </a>

                                                    @if (course.CourseExamList != null)
                                                    {
                                                        foreach (var courseExam in course.CourseExamList)
                                                        {
                                                            <ul class="treeview-menu">
                                                                <li>
                                                                    <a href="#">
                                                                        @*<i class="fa fa-angle-left pull-left"></i>*@
                                                                        <span>
                                                                            @courseExam.Name
                                                                            @*<button class='btn btn-info btn-xs New-Curriculum' data-id='@course.Id~@courseExam.Id~@courseExam.Type~@courseExam.Name' title='New'>
                                                                                <i class="fa fa-plus"></i>
                                                                                </button>*@
                                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@course.Id~@courseExam.Id~@courseExam.Type~@courseExam.Name' title='View'>
                                                                                <i class=" fa fa-eye"></i>
                                                                            </button>
                                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@course.Id~@courseExam.Id~@courseExam.Type~@courseExam.Name' title='Edit'>
                                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                                </button>*@
                                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@course.Id~@courseExam.Id~@courseExam.Type~@courseExam.Name' title='Delete'>
                                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                                            </button>
                                                                        </span>
                                                                    </a>
                                                                </li>
                                                            </ul>
                                                        }
                                                    }
                                                    @if (course.PrerequisiteList != null)
                                                    {
                                                        foreach (var prerequisite in course.PrerequisiteList)
                                                        {
                                                            <ul class="treeview-menu">
                                                                <li>
                                                                    <a href="#">
                                                                        @*<i class="fa fa-angle-left pull-left"></i>*@
                                                                        <span>
                                                                            @prerequisite.Name
                                                                            @*<button class='btn btn-info btn-xs New-Curriculum' data-id='@course.Id~@prerequisite.Id~@prerequisite.Type~@prerequisite.Name' title='New'>
                                                                                <i class="fa fa-plus"></i>
                                                                                </button>*@
                                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@course.Id~@prerequisite.Id~@prerequisite.Type~@prerequisite.Name' title='View'>
                                                                                <i class=" fa fa-eye"></i>
                                                                            </button>
                                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@course.Id~@prerequisite.Id~@prerequisite.Type~@prerequisite.Name' title='Edit'>
                                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                                </button>*@
                                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@course.Id~@prerequisite.Id~@prerequisite.Type~@prerequisite.Name' title='Delete'>
                                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                                            </button>
                                                                        </span>
                                                                    </a>
                                                                </li>
                                                            </ul>
                                                        }
                                                    }

                                                    @if (course.ModuleList != null)
                                                    {
                                                        foreach (var courseModule in course.ModuleList)
                                                        {
                                                            <ul class="treeview-menu">
                                                                <li class="treeview CourseModule-State-Management" id="@courseModule.Type@courseModule.Id">
                                                                    <a href="#">
                                                                        @if (courseModule.ModuleExamList.Count() > 0)
                                                                        {
                                                                            <i class="fa fa-angle-left pull-left"></i>
                                                                        }
                                                                        <span>
                                                                            @courseModule.Name
                                                                            <button class='btn btn-info btn-xs New-Curriculum' data-id='@course.Id~@courseModule.Id~@courseModule.Type~@courseModule.Name' title='New'>
                                                                                <i class="fa fa-plus"></i>
                                                                            </button>
                                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@course.Id~@courseModule.Id~@courseModule.Type~@courseModule.Name' title='View'>
                                                                                <i class=" fa fa-eye"></i>
                                                                            </button>
                                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@course.Id~@courseModule.Id~@courseModule.Type~@courseModule.Name' title='Edit'>
                                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                                </button>*@
                                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@course.Id~@courseModule.Id~@courseModule.Type~@courseModule.Name' title='Delete'>
                                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                                            </button>
                                                                        </span>
                                                                    </a>
                                                                    @if (courseModule.ModuleExamList != null)
                                                                    {
                                                                        foreach (var modelExam in courseModule.ModuleExamList)
                                                                        {
                                                                            <ul class="treeview-menu">
                                                                                <li>
                                                                                    <a href="#">
                                                                                        @*<i class="fa fa-angle-left pull-left"></i>*@
                                                                                        <span>
                                                                                            @modelExam.Name
                                                                                            @*<button class='btn btn-info btn-xs New-Curriculum' data-id='@courseModule.Id~@modelExam.Id~@modelExam.Type~@modelExam.Name' title='New'>
                                                                                                <i class="fa fa-plus"></i>
                                                                                                </button>*@
                                                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@courseModule.Id~@modelExam.Id~@modelExam.Type~@modelExam.Name' title='View'>
                                                                                                <i class=" fa fa-eye"></i>
                                                                                            </button>
                                                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@courseModule.Id~@modelExam.Id~@modelExam.Type~@modelExam.Name' title='Edit'>
                                                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                                                </button>*@
                                                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@courseModule.Id~@modelExam.Id~@modelExam.Type~@modelExam.Name' title='Delete'>
                                                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                                                            </button>
                                                                                        </span>
                                                                                    </a>
                                                                                </li>
                                                                            </ul>
                                                                        }
                                                                    }
                                                                    @if (courseModule.ModuleGroundLessonList != null)
                                                                    {
                                                                        foreach (var roundLesson in courseModule.ModuleGroundLessonList)
                                                                        {
                                                                            <ul class="treeview-menu">
                                                                                <li>
                                                                                    <a href="#">
                                                                                        @*<i class="fa fa-angle-left pull-left"></i>*@
                                                                                        <span>
                                                                                            @roundLesson.Name
                                                                                            @*<button class='btn btn-info btn-xs New-Curriculum' data-id='@courseModule.Id~@roundLesson.Id~@roundLesson.Type~@roundLesson.Name' title='New'>
                                                                                                <i class="fa fa-plus"></i>
                                                                                                </button>*@
                                                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@courseModule.Id~@roundLesson.Id~@roundLesson.Type~@roundLesson.Name' title='View'>
                                                                                                <i class=" fa fa-eye"></i>
                                                                                            </button>
                                                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@courseModule.Id~@roundLesson.Id~@roundLesson.Type~@roundLesson.Name' title='Edit'>
                                                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                                                </button>*@
                                                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@courseModule.Id~@roundLesson.Id~@roundLesson.Type~@roundLesson.Name' title='Delete'>
                                                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                                                            </button>
                                                                                        </span>
                                                                                    </a>
                                                                                </li>
                                                                            </ul>
                                                                        }
                                                                    }
                                                                </li>
                                                            </ul>
                                                        }
                                                    }
                                                </li>
                                            </ul>
                                        }
                                    }
                                    @if (cat.LessonList != null)
                                    {
                                        foreach (var lesson in cat.LessonList)
                                        {
                                            <ul class="treeview-menu">
                                                <li class="treeview CourseAndLesson-State-Management" id="@lesson.Type@lesson.Id">
                                                    <a href="#">
                                                        @if (lesson.LessonEvaluationTemplateViewList.Count() > 0)
                                                        {
                                                            <i class="fa fa-angle-left pull-left"></i>
                                                        }
                                                        <span>
                                                            @lesson.Name
                                                            <button class='btn btn-info btn-xs New-Curriculum' data-id='@cat.Id~@lesson.Id~@lesson.Type~@lesson.Name' title='New'>
                                                                <i class="fa fa-plus"></i>
                                                            </button>
                                                            <button class='btn btn-info btn-xs View-Curriculum' data-id='@cat.Id~@lesson.Id~@lesson.Type~@lesson.Name' title='View'>
                                                                <i class=" fa fa-eye"></i>
                                                            </button>
                                                            @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@cat.Id~@lesson.Id~@lesson.Type~@lesson.Name' title='Edit'>
                                                                &nbsp;<i class=" fa fa-edit"></i>
                                                                </button>*@
                                                            <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@cat.Id~@lesson.Id~@lesson.Type~@lesson.Name' title='Delete'>
                                                                &nbsp;<i class=" fa fa-remove"></i>
                                                            </button>
                                                        </span>
                                                    </a>

                                                    @foreach (var eval in lesson.LessonEvaluationTemplateViewList)
                                                    {
                                                        <ul class="treeview-menu">
                                                            <li>
                                                                <a href="#">
                                                                    <span>
                                                                        @eval.Name
                                                                        @*<button class='btn btn-info btn-xs New-Curriculum' data-id='@lesson.Id~@eval.Id~@eval.Type~@eval.Name' title='New'>
                                                                            <i class="fa fa-plus"></i>
                                                                            </button>*@
                                                                        <button class='btn btn-info btn-xs View-Curriculum' data-id='@lesson.Id~@eval.Id~@eval.Type~@eval.Name' title='View'>
                                                                            <i class=" fa fa-eye"></i>
                                                                        </button>
                                                                        @*<button class='btn btn-info btn-xs Edit-Curriculum' data-id='@lesson.Id~@eval.Id~@eval.Type~@eval.Name' title='Edit'>
                                                                            &nbsp;<i class=" fa fa-edit"></i>
                                                                            </button>*@
                                                                        <button class='btn btn-warning btn-xs Delete-Curriculum' data-id='@lesson.Id~@eval.Id~@eval.Type~@eval.Name' title='Delete'>
                                                                            &nbsp;<i class=" fa fa-remove"></i>
                                                                        </button>
                                                                    </span>
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    }
                                                </li>
                                            </ul>

                                        }
                                    }
                                </li>
                            </ul>
                        }
                    }
                </li>
            }
            else
            {
                <div class="row">
                    <div class="col-lg-3 col-md-3 col-sm-0 col-xs-0"></div>
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                        <div class="info-box  bg-gray">
                            <span class="info-box-icon bg-yellow"><i class="fa fa-envelope-o"></i></span>

                            <div class="info-box-content">
                                <span class="info-box-text">There is no program yet.</span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-0 col-xs-0"></div>
                </div>

            }
        }
    </ul>
</section>

<div class="modal modal-fade" id="CurriculumDetailPopupModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="control-label" id="CurriculumTitle" name="CurriculumTitle"></label>
            </div>
            <div class="modal-body">
                <div id="CurriculemDetail-Container">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="row hide">
    <input type="text" id="txtProgramId" name="txtProgramId" />
    <input type="text" id="txtCourseId" name="txtCourseId" />
</div>

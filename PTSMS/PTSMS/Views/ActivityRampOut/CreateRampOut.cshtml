
@model PTSMSDAL.Models.Dispatch.ActivityRampOut

<link href="~/Content/AdminLTE/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery.timeentry.package-2.0.1/jquery.plugin.js"></script>
<script src="~/Scripts/jquery.timeentry.package-2.0.1/jquery.timeentry.js"></script>

@*@using (Html.BeginForm("Create", "ActivityRampOut", FormMethod.Post, new { enctype = "multipart/form-data", id = "btnActivityRampOut" }))
{
    @Html.AntiForgeryToken()*@
    <div class="box box-success">
        <div class="box-header with-border">
            <h3 class="box-title">Activity Ramp-Out </h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body no-padding">

            @if (Model.ActivityCheckinId == 0)
            {
                <div class="alert alert-warning alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h4><i class="icon fa fa-warning"></i> Alert!</h4>
                    Sorry, authorization didn't made so far.
                    @if (ViewBag.AutorizationMessage != null)
                    {
                        <label>@ViewBag.AutorizationMessage</label>
                    }`
                </div>
            }
            else
            {
                if (ViewBag.AutorizationMessage != null && ViewBag.IsFlyingLesson)
                {
                    <div class="alert alert-warning alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        <h4><i class="icon fa fa-warning"></i> Alert!</h4>
                        <label>@ViewBag.AutorizationMessage</label>
                    </div>
                }
                else
                {
                    <div class="col-md-12 hide" id="RampOutMessage">
                        <div class="row hide" id="RampOutMessageSuccess">
                            <div class="col-md-12">
                                <div class="alert alert-success alert-dismissible">
                                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                    <h4><i class="icon fa fa-hand-o-right"></i> Success!</h4>
                                    <ul>
                                        <li><lable id="RampOutMessageSuccessLabel"> </lable></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="row hide" id="RampOutMessageFail">
                            <div class="col-md-12">
                                <div class="alert alert-danger alert-dismissible">
                                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                    <h4><i class="icon fa fa-hand-o-right"></i> Failed!</h4>
                                    <ul>
                                        <li><lable id="RampOutMessageFailLabel"> </lable></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <span class="text-danger"> <label class="control-label" id="lblRampOutMessage"></label></span>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group hide">
                            @Html.LabelFor(model => model.ActivityCheckinId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ActivityCheckinId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ActivityCheckinId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hide">
                            @Html.LabelFor(model => model.ActivityRampOutId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ActivityRampOutId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ActivityRampOutId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="HobbsDiv">
                            @Html.LabelFor(model => model.Hobbs, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Hobbs, new { htmlAttributes = new { @class = "form-control", min = "" + Model.Hobbs } })
                                @Html.ValidationMessageFor(model => model.Hobbs, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AdjustedDepartureTime, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                <div class="input-group date customDateTimePicker">
                                    @Html.EditorFor(model => model.AdjustedDepartureTime, new { htmlAttributes = new { @class = "form-control", id = "AdjustedDepartureTime", name = "AdjustedDepartureTime" } })
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.AdjustedDepartureTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">
                                <input type="text" id="departureTimetime" autocomplete="off" class="form-control" size="10">
                            </div>
                        </div>

                        <div class="form-group hide" id="AdjustedReasonIdDiv">
                            @Html.LabelFor(model => model.AdjustedReasonId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.DropDownList("AdjustedReasonId", null, htmlAttributes: new { @class = "form-control", id = "AdjustedReasonId", name = "AdjustedReasonId" })
                                @Html.ValidationMessageFor(model => model.AdjustedReasonId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hide" id="RemarkDiv">
                            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", id = "Remark", name = "Remark" } })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-4">
                                <input type="submit" value="Create" id="btnActivityRampOut" class="btn btn-info" />
                            </div>
                        </div>

                        <div class="form-group hide">
                            <input type="password" name="txtActivityRampOutPassword" id="txtActivityRampOutPassword" />
                        </div>
                    </div>
                }
            }
        </div>
    </div>
@*}*@



<script src="~/Content/AdminLTE/plugins/datepicker/bootstrap-datepicker.js"></script>
<script src="~/Content/AdminLTE/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        $('#lblRampOutMessage').html('');
        @{

            if(ViewBag.AdjustedReason != null)
            {
                <text>
        $('#RemarkDiv').removeClass('hide');
        $('#AdjustedReasonIdDiv').removeClass('hide');
        </text>
                ViewBag.AdjustedReason = null;
            }

            if (ViewBag.IsFlyingLesson != null)
            {
                bool IsFlyingLesson = (bool)ViewBag.IsFlyingLesson;
                if (!IsFlyingLesson)
                {
                <text>
        $('#HobbsDiv').addClass('hide');
        </text>
                }
            }
            DateTime date = DateTime.Now;
            bool isLastEquipmentRampInDateHasValue = false;
            if(ViewBag.LastEquipmentRampInDate!=null)
            {
                isLastEquipmentRampInDateHasValue = true;
                date =(DateTime) ViewBag.LastEquipmentRampInDate;
            }

            <text>

        var lastEquipmentRampInDate = new Date(Date.parse('@date'));
        var currentDateTime = new Date();
        var minimumStartingDate = new Date();
        if (lastEquipmentRampInDate.valueOf() > currentDateTime.valueOf())
        {
            minimumStartingDate = lastEquipmentRampInDate;
        }
        var Departureday = new Date('@ViewBag.AdjustedDepartureTime');
        var minute = Departureday.getMinutes();
        var hour = Departureday.getHours();
        var dd = Departureday.getDate();
        var mm = Departureday.getMonth() + 1; //January is 0!
        var yyyy = Departureday.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        var time = hour + ':' + minute;
        var DepartureDate = mm + '/' + dd + '/' + yyyy;
        var adjustedDepartureTime = DepartureDate;
        @*alert('@isLastEquipmentRampInDateHasValue');*@
        if (lastEquipmentRampInDate.valueOf() > adjustedDepartureTime.valueOf() && '@isLastEquipmentRampInDateHasValue' == 'True') {
            $('#lblRampOutMessage').html('Last equipment ramp-in date is ' + '@date' + ". Please select a valid adjusted departure time.");
            $('#AdjustedDepartureTime').val('');
        }
        $('#AdjustedDepartureTime').val(DepartureDate);
        $('#departureTimetime').val(time);
        $(".customDateTimePicker").datepicker({
            format: "mm/dd/yyyy",
            autoclose: true,
            todayBtn: true,
           // startDate: minimumStartingDate,
            showMeridian: true
        }).on('changeDate', function (ev) {

            var AdjustedDepartureTime = $('#AdjustedDepartureTime').val();
            var clickedDateTime = new Date(AdjustedDepartureTime.toString());
            var scheduledDateTime = new Date('@ViewBag.AdjustedDepartureTime');

            //alert('clickedDateTime=' + clickedDateTime + ' scheduledDateTime=' + scheduledDateTime);

            if (clickedDateTime.valueOf() != scheduledDateTime.valueOf()) {
                $('#RemarkDiv').removeClass('hide');
                $('#AdjustedReasonIdDiv').removeClass('hide');
            }
            else {

                $('#Remark').val('');
                $('#AdjustedReasonId').val('');
                $('#RemarkDiv').addClass('hide');
                $('#AdjustedReasonIdDiv').addClass('hide');
            }
            });
        $('#departureTimetime').timeEntry({ show24Hours: true });
        </text>
        }
        //ViewBag.LastEquipmentRampInDate
        $('#btnActivityRampOut').on('click', function (e) {
            debugger;
            var data = {
                "ActivityCheckinId": $('#ActivityCheckinId').val(),
                "ActivityRampOutId": $('#ActivityRampOutId').val(),
                "Hobbs": $('#Hobbs').val(),
                "AdjustedDepartureTime": $('#AdjustedDepartureTime').val() + ' ' + $('#departureTimetime').val()
            }

            $.ajax({
                url: "/ActivityRampOut/CreateJson",
                type: 'POST',
                data: data,
                success: function (result) {
                    $('#RampOutMessage').removeClass("hide");
                    if (result.isSuccess) {
                        $('#RampOutMessageSuccess').removeClass("hide");
                        $('#RampOutMessageFail').addClass("hide");
                        $('#RampOutMessageSuccessLabel').html(result.Message);
                    }
                    else {
                        $('#RampOutMessageFail').removeClass("hide");
                        $('#RampOutMessageSuccess').addClass("hide");
                        $('#RampOutMessageFailLabel').html(result.Message);
                    }

                },
                error: function () {
                    $('#RampOutMessageFail').removeClass("hide");
                    $('#RampOutMessageSuccess').addClass("hide");
                    $('#RampOutMessageFailLabel').html("Error has occured while coloring the event.");
                }
            });
        });
    });
</script>